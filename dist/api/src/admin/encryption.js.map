{"version":3,"sources":["../../../../api/src/admin/encryption.js"],"names":["mongoose","require","Schema","bcrypt","SALT_WORK_FACTOR","getHash","genSalt","err","salt","next","hash","value","module","exports"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASF,SAASE,MAAxB;AACA,IAAMC,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,mBAAmB,EAAzB;;AAEA,SAASC,OAAT,GAAmB;;AAEjB;AACAF,SAAOG,OAAP,CAAeF,gBAAf,EAAiC,UAASG,GAAT,EAAcC,IAAd,EAAoB;AACnD,QAAID,GAAJ,EAAS,OAAOE,KAAKF,GAAL,CAAP;;AAET;AACAJ,WAAOO,IAAP,CAAY,QAAZ,EAAsBF,IAAtB,EAA4B,UAASD,GAAT,EAAcG,IAAd,EAAoB;AAC9C,UAAIH,GAAJ,EAAS,OAAOE,KAAKF,GAAL,CAAP;;AAET;AACA,UAAII,QAAQD,IAAZ;AACAD;AACD,KAND;AAOD,GAXD;AAYD;;AAGDG,OAAOC,OAAP,GAAiBR,OAAjB","file":"encryption.js","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst bcrypt = require('bcrypt');\nconst SALT_WORK_FACTOR = 10;\n\nfunction getHash() {\n\n  // generate a salt\n  bcrypt.genSalt(SALT_WORK_FACTOR, function(err, salt) {\n    if (err) return next(err);\n\n    // hash the password using our new salt\n    bcrypt.hash('abc123', salt, function(err, hash) {\n      if (err) return next(err);\n\n      // override the cleartext password with the hashed one\n      let value = hash;\n      next();\n    });\n  });\n};\n\n\nmodule.exports = getHash;"]}