{"version":3,"sources":["../../../../api/src/admin/getHash.js"],"names":["mongoose","require","Schema","bcrypt","SALT_WORK_FACTOR","stdin","process","stdout","console","log","resume","setEncoding","on","data","genSalt","err","salt","hash"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASF,SAASE,MAAxB;AACA,IAAMC,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,mBAAmB,EAAzB;;AAEA;AACA,IAAMC,QAAQC,QAAQD,KAAtB;AAAA,IAA6BE,SAASD,QAAQC,MAA9C;;AAEAC,QAAQC,GAAR,CAAY,8BAAZ;;AAEAJ,MAAMK,MAAN;AACAL,MAAMM,WAAN,CAAkB,MAAlB;;AAEAN,MAAMO,EAAN,CAAS,MAAT,EAAiB,UAASC,IAAT,EAAe;AAC9BV,SAAOW,OAAP,CAAeV,gBAAf,EAAiC,UAASW,GAAT,EAAcC,IAAd,EAAoB;AACnD,QAAID,GAAJ,EAAS;AACPP,cAAQC,GAAR,CAAYM,GAAZ;AACA;AACD;;AAED;AACAZ,WAAOc,IAAP,CAAYJ,IAAZ,EAAkBG,IAAlB,EAAwB,UAASD,GAAT,EAAcE,IAAd,EAAoB;AAC1C,UAAIF,GAAJ,EAAS;AACPP,gBAAQC,GAAR,CAAYM,GAAZ;AACD;;AAEDP,cAAQC,GAAR,CAAY,WAAWQ,IAAvB;AACD,KAND;AAOD,GAdD;AAeD,CAhBD","file":"getHash.js","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst bcrypt = require('bcrypt');\nconst SALT_WORK_FACTOR = 10;\n\n// Get input from the console\nconst stdin = process.stdin, stdout = process.stdout;\n\nconsole.log('Enter the password to hash: ');\n\nstdin.resume();\nstdin.setEncoding('utf8');\n\nstdin.on('data', function(data) {\n  bcrypt.genSalt(SALT_WORK_FACTOR, function(err, salt) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    // hash the password using our new salt\n    bcrypt.hash(data, salt, function(err, hash) {\n      if (err) {\n        console.log(err)\n      }\n\n      console.log('Hash: ' + hash);\n    });\n  });\n});\n"]}