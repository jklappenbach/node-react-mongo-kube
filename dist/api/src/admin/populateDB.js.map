{"version":3,"sources":["../../../../api/src/admin/populateDB.js"],"names":["db","require","mongoose","Company","collection","drop","companies","name","ticker","closingPrices","date","Date","price","count","forEach","company","save","err","console","log","length","quit","disconnect"],"mappings":";;AAAA;;;AAGA,IAAMA,KAAKC,QAAQ,gBAAR,CAAX;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,UAAUF,QAAQ,yBAAR,CAAd;;AAEAE,QAAQC,UAAR,CAAmBC,IAAnB;AACA,IAAIC,YAAY,CACd,IAAIH,OAAJ,CAAY;AACVI,QAAM,WADI;AAEVC,UAAQ,MAFE;AAGVC,iBAAe,CACb;AACEC,UAAM,IAAIC,IAAJ,EADR;AAEEC,WAAO;AAFT,GADa;AAHL,CAAZ,CADc,EAWd,IAAIT,OAAJ,CAAY;AACVI,QAAM,iCADI;AAEVC,UAAQ,KAFE;AAGVC,iBAAe,CACb;AACEC,UAAM,IAAIC,IAAJ,EADR;AAEEC,WAAO;AAFT,GADa;AAHL,CAAZ,CAXc,EAqBd,IAAIT,OAAJ,CAAY;AACVI,QAAM,QADI;AAEVC,UAAQ,MAFE;AAGVC,iBAAe,CACb;AACEC,UAAM,IAAIC,IAAJ,EADR;AAEEC,WAAO;AAFT,GADa;AAHL,CAAZ,CArBc,CAAhB;;AAiCA,IAAIC,QAAQ,CAAZ;AACAP,UAAUQ,OAAV,CAAkB,UAACC,OAAD,EAAa;AAC7BA,UAAQC,IAAR,CAAa,UAACC,GAAD,EAAS;AACpB,QAAIA,GAAJ,EAAS;AACPC,cAAQC,GAAR,CAAYF,GAAZ;AACD,KAFD,MAEO;AACLJ;AACA,UAAIA,SAASP,UAAUc,MAAvB,EAA+BC;AAChC;AACF,GAPD;AAQD,CATD;;AAWA,SAASA,IAAT,GAAgB;AACdH,UAAQC,GAAR,CAAY,QAAZ,EAAsBb,UAAUc,MAAhC,EAAwC,mCAAxC;AACAlB,WAASoB,UAAT;AACD","file":"populateDB.js","sourcesContent":["/**\n * Base population, to be run as part of the deployment business logic\n */\nconst db = require('../database.js');\nvar mongoose = require('mongoose');\nvar Company = require('../models/company.model');\n\nCompany.collection.drop();\nvar companies = [\n  new Company({\n    name: 'Microsoft',\n    ticker: 'MSFT',\n    closingPrices: [\n      {\n        date: new Date(),\n        price: 33.45,\n      }\n    ],\n  }),\n  new Company({\n    name: 'International Business Machines',\n    ticker: 'IBM',\n    closingPrices: [\n      {\n        date: new Date(),\n        price: 25.76,\n      }\n    ],\n  }),\n  new Company({\n    name: 'Google',\n    ticker: 'GOOG',\n    closingPrices: [\n      {\n        date: new Date(),\n        price: 1034.22,\n      }\n    ],\n  }),\n];\n\nvar count = 0;\ncompanies.forEach((company) => {\n  company.save((err) => {\n    if (err) {\n      console.log(err);\n    } else {\n      count++;\n      if (count == companies.length) quit();\n    }\n  });\n});\n\nfunction quit() {\n  console.log('Added ', companies.length, ' companies for initial population');\n  mongoose.disconnect();\n}\n"]}